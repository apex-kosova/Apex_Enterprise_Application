drop view Previous_Employee_view;
drop view Employee_view;
drop view Project_Employee_view;
drop view President_view;
drop view Manager_view;
drop view Interim_Manager_view;
drop view Current_Project_view;
drop view Previous_Project_view;

create view Previous_Employee_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	isFired,
	salary,
	Password,
	Username
FROM Person where type = 'Previous_Employee';

create or replace TRIGGER Previous_Employee_trigger
	INSTEAD OF insert on Previous_Employee_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				isFired,
				salary,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'Previous_Employee',
				:NEW.isFired,
				:NEW.salary,
				:NEW.Password,
				:NEW.Username);
END;
/

create view Employee_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	login_id,
	salary,
	salary_exception,
	manager_emp,
	Password,
	Username
FROM Person where type = 'Employee';

create or replace TRIGGER Employee_trigger
	INSTEAD OF insert on Employee_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				login_id,
				salary,
				salary_exception,
				manager_emp,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'Employee',
				:NEW.login_id,
				:NEW.salary,
				:NEW.salary_exception,
				:NEW.manager_emp,
				:NEW.Password,
				:NEW.Username);
END;
/


create view Manager_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	login_id,
	salary,
	salary_exception,
	bonus,
	dept_no,
	Password,
	Username
FROM Person where type = 'Manager';

create or replace TRIGGER Manager_trigger
	INSTEAD OF insert on Manager_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				login_id,
				salary,
				salary_exception,
				bonus,
				dept_no,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'Manager',
				:NEW.login_id,
				:NEW.salary,
				:NEW.salary_exception,
				:NEW.bonus,
				:NEW.dept_no,
				:NEW.Password,
				:NEW.Username);
END;
/

create view President_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	login_id,
	salary,
	salary_exception,
	bonus,
	Password,
	Username
FROM Person where type = 'President';

create or replace TRIGGER President_trigger
	INSTEAD OF insert on President_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				login_id,
				salary,
				salary_exception,
				bonus,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'President',
				:NEW.login_id,
				:NEW.salary,
				:NEW.salary_exception,
				:NEW.bonus,
				:NEW.Password,
				:NEW.Username);
END;
/


create view Interim_Manager_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	login_id,
	salary,
	salary_exception,
	bonus,
	dept_no,
	Password,
	Username
FROM Person where type = 'Interim_Manager';

create or replace TRIGGER Interim_Manager_trigger
	INSTEAD OF insert on Interim_Manager_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				login_id,
				salary,
				salary_exception,
				bonus,
				dept_no,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'Interim_Manager',
				:NEW.login_id,
				:NEW.salary,
				:NEW.salary_exception,
				:NEW.bonus,
				:NEW.dept_no,
				:NEW.Password,
				:NEW.Username);
END;
/

create view Project_Employee_view as
SELECT
	person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Spouse,
	type,
	login_id,
	salary,
	salary_exception,
	manager_emp,
	Password,
	Username
FROM Person where type = 'Project_Employee';

create or replace TRIGGER Project_Employee_trigger
	INSTEAD OF insert on Project_Employee_view
	FOR EACH ROW
BEGIN
	insert into Person(
				person_id,
				first_name,
				last_name,
				home_address,
				zipcode,
				home_phone,
				us_citizen,
				Spouse,
				type,
				login_id,
				salary,
				salary_exception,
				manager_emp,
				Password,
				Username)
				 VALUES (
				:NEW.person_id,
				:NEW.first_name,
				:NEW.last_name,
				:NEW.home_address,
				:NEW.zipcode,
				:NEW.home_phone,
				:NEW.us_citizen,
				:NEW.Spouse,
				'Project_Employee',
				:NEW.login_id,
				:NEW.salary,
				:NEW.salary_exception,
				:NEW.manager_emp,
				:NEW.Password,
				:NEW.Username);
END;
/

create view Previous_Project_view as
SELECT
	project_no,
	project_title,
	type,
	status,
	comments,
	documents,
	person_id,
	dept_no,
	sub_projects,
	sub_project_of,
	end_date_month,
	end_date_day,
	end_date_year,
	est_person_hours
FROM Project where type = 'Previous_Project';

create or replace TRIGGER Previous_Project_trigger
	INSTEAD OF insert on Previous_Project_view
	FOR EACH ROW
BEGIN
	insert into Project(
				project_no,
				project_title,
				type,							
				status,
				comments,
				documents,
				person_id,
				dept_no,
				sub_projects,
				sub_project_of,
				end_date_month,
				end_date_day,
				end_date_year,
				est_person_hours)
				 VALUES (
				:NEW.project_no,
				:NEW.project_title,
				:'Previous_Project',
				:NEW.status,
				:NEW.comments,
				:NEW.documents,
				:NEW.person_id,
				:NEW.dept_no,
				:NEW.sub_projects,
				:NEW.sub_project_of,
				:NEW.end_date_month,
				:NEW.end_date_day,
				:NEW.end_date_year,
				:NEW.est_person_hours);
END;
/

create view Current_Project_view as
SELECT
	project_no,
	project_title,
	type,
	status,
	comments,
	documents,
	person_id,
	dept_no,
	sub_projects,
	sub_project_of,
	project_active
FROM Project where type = 'Current_Project';

create or replace TRIGGER Current_Project_trigger
	INSTEAD OF insert on Current_Project_view
	FOR EACH ROW
BEGIN
	insert into Project(
				project_no,
				project_title,
				type,
				status,
				comments,
				documents,
				person_id,
				dept_no,
				sub_projects,
				sub_project_of,
				project_active)
				 VALUES (
				:NEW.project_no,
				:NEW.project_title,
				:'Current_Project',
				:NEW.status,
				:NEW.comments,
				:NEW.documents,
				:NEW.person_id,
				:NEW.dept_no,
				:NEW.sub_projects,
				:NEW.sub_project_of,
				:NEW.project_active);
END;
/